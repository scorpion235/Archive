/******************************************************************************/
/***         Generated by IBExpert 2019.1.31.1 24.07.2019 23:22:56          ***/
/******************************************************************************/

SET SQL DIALECT 3;

SET NAMES UTF8;

SET CLIENTLIB 'd:\Mercurial\local\WordProcessor\fbclient.dll';

CREATE DATABASE 'd:\Mercurial\local\WordProcessor\db\word_processor.fdb'
USER 'SYSDBA' PASSWORD 'masterkey'
PAGE_SIZE 16384
DEFAULT CHARACTER SET UTF8 COLLATION UTF8;



/******************************************************************************/
/***                                Domains                                 ***/
/******************************************************************************/

CREATE DOMAIN INT_NN AS
INTEGER
NOT NULL;

CREATE DOMAIN P_KEY AS
INTEGER
NOT NULL;

CREATE DOMAIN S_1000_NN AS
VARCHAR(1000) CHARACTER SET WIN1251
NOT NULL;

CREATE DOMAIN S_15_NN AS
VARCHAR(15) CHARACTER SET WIN1251
NOT NULL;



/******************************************************************************/
/***                               Generators                               ***/
/******************************************************************************/

CREATE GENERATOR GEN_DICTIONARY_ID START WITH 1 INCREMENT BY 1;
SET GENERATOR GEN_DICTIONARY_ID TO 16;

CREATE GENERATOR GEN_WORDS_ID START WITH 1 INCREMENT BY 1;
SET GENERATOR GEN_WORDS_ID TO 32;



/******************************************************************************/
/***                            Package headers                             ***/
/******************************************************************************/



SET TERM ^ ;

CREATE PACKAGE PKB_DICTIONARY
AS
BEGIN
PROCEDURE DELETE_DATA;

  PROCEDURE GENERATE;

  PROCEDURE SELECT_DATA (
    P_WORD S_1000_NN)
  RETURNS (
    WORD VARCHAR(15) CHARACTER SET WIN1251 /* TYPE OF COLUMN WORDS.WORD */);
END^


CREATE PACKAGE PKB_WORDS
AS
BEGIN
  ------------------------------------------------------------------------------
  --вставка данных
  PROCEDURE INSERT_DATA (
    WORD S_1000_NN);

  ------------------------------------------------------------------------------
  --удаление данных
  PROCEDURE DELETE_DATA;
END^



SET TERM ; ^



/******************************************************************************/
/***                                 Tables                                 ***/
/******************************************************************************/



CREATE TABLE DICTIONARY (
    ID      P_KEY,
    WORD    S_15_NN,
    REPEAT  INT_NN
);

CREATE TABLE WORDS (
    ID    P_KEY,
    WORD  S_15_NN
);



/******************************************************************************/
/***                              Primary keys                              ***/
/******************************************************************************/

ALTER TABLE DICTIONARY ADD CONSTRAINT PK_DICTIONARY PRIMARY KEY (ID);
ALTER TABLE WORDS ADD CONSTRAINT PK_WORDS PRIMARY KEY (ID);


/******************************************************************************/
/***                                Indices                                 ***/
/******************************************************************************/

CREATE UNIQUE INDEX DICTIONARY_IDX ON DICTIONARY (WORD);
CREATE INDEX WORDS_IDX_WORD ON WORDS (WORD);


/******************************************************************************/
/***                            Package headers                             ***/
/******************************************************************************/



SET TERM ^ ;

ALTER PACKAGE PKB_DICTIONARY
AS
BEGIN
  ------------------------------------------------------------------------------
  --сгенерировать словарь
  PROCEDURE GENERATE;

  ------------------------------------------------------------------------------
  --выборка данных
  PROCEDURE SELECT_DATA (
    P_WORD S_1000_NN)
  RETURNS (
    WORD TYPE OF COLUMN WORDS.WORD);

  ------------------------------------------------------------------------------
  --удаление данных
  PROCEDURE DELETE_DATA;
END
^



SET TERM ; ^



/******************************************************************************/
/***                             Package bodies                             ***/
/******************************************************************************/



SET TERM ^ ;

CREATE PACKAGE BODY PKB_DICTIONARY
AS
BEGIN
  ------------------------------------------------------------------------------
  --сгенерировать словарь
  PROCEDURE GENERATE
  AS
  BEGIN
    --удаление данных
    EXECUTE PROCEDURE PKB_DICTIONARY.DELETE_DATA;

    INSERT INTO DICTIONARY (
      ID,
      WORD,
      REPEAT
    )
    SELECT (SELECT NEXT VALUE FOR GEN_DICTIONARY_ID FROM RDB$DATABASE),
           WORD,
           COUNT(ID)
      FROM WORDS
     GROUP BY WORD
    HAVING COUNT(ID) >= 3;
  END

  ------------------------------------------------------------------------------
  --выборка данных
  PROCEDURE SELECT_DATA (
    P_WORD S_1000_NN)
  RETURNS (
    WORD TYPE OF COLUMN WORDS.WORD)
  AS
  BEGIN
    FOR SELECT FIRST(5) WORD
          FROM DICTIONARY
         WHERE WORD LIKE LOWER(:P_WORD ||'%')
         ORDER BY REPEAT,
                  WORD
          INTO :WORD
    DO
      SUSPEND;
  END

  ------------------------------------------------------------------------------
  --удаление данных
  PROCEDURE DELETE_DATA
  AS
  BEGIN
    DELETE
      FROM DICTIONARY
     WHERE 1 = 1;
  END
END^


CREATE PACKAGE BODY PKB_WORDS
AS
BEGIN
  ------------------------------------------------------------------------------
  --вставка данных
  PROCEDURE INSERT_DATA (
    WORD S_1000_NN)
  AS
  BEGIN
    WORD = LOWER(TRIM(WORD));

    IF ((CHAR_LENGTH(WORD) < 3) OR (CHAR_LENGTH(WORD) > 15)) THEN
      EXIT;

    INSERT INTO WORDS (
      ID,
      WORD
    )
    VALUES (
      (SELECT NEXT VALUE FOR GEN_WORDS_ID FROM RDB$DATABASE),
      :WORD
    );
  END

  ------------------------------------------------------------------------------
  --удаление данных
  PROCEDURE DELETE_DATA
  AS
  BEGIN
    DELETE
      FROM WORDS
     WHERE 1 = 1;
  END
END^



SET TERM ; ^

